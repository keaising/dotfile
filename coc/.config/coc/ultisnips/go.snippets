# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet iferr "With Single Field"
if err != nil {
	${1}
}${0}
endsnippet

snippet logr "With Fields" i
logrus.WithField("${1}", ${2}).Errorln("${3}", err)${0}
endsnippet

snippet logrr "With Fields" i
logrus.WithFields(logrus.Fields{"${1}": ${2}}).Errorln("${3}", err)${0}
endsnippet

snippet logf "logrus Fields" i
logrus.Fields{"${1}": ${2}}${0}
endsnippet

snippet nowdate "now date" 
time.Now().Format("2006-01-02") ${0}
endsnippet

snippet now "now" 
time.Now().Unix()${0}
endsnippet

snippet spew "spew" i
spew.Printf("${1}: %#+v\n", ${1})${0}
endsnippet

snippet yyyy "now date" 
"2006-01-02" ${0}
endsnippet

