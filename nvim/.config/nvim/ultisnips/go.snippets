snippet if "With Single Field"
if err != nil {
	${1}
}${0}
endsnippet

snippet cc "context.TODO" i
context.TODO(),
endsnippet

snippet ccc "ctx context.Context" i
ctx context.Context
endsnippet

snippet logr "With Fields" i
logrus.WithFields(f).Errorln("${1}", err)${0}
endsnippet

snippet logrr "With Fields" i
logrus.WithField("${1}", ${2}).Errorln("${3}", err)${0}
endsnippet

snippet logf "logrus Fields" i
logrus.Fields{"c": c, "$1": $1, $0}
endsnippet

snippet nowdate "now date" 
time.Now().Format("2006-01-02") ${0}
endsnippet

snippet now "now" 
time.Now().Unix()${0}
endsnippet

snippet spew "spew" i
spew.Printf("${1}: %#+v\n", ${1})${0}
endsnippet

snippet yyyy "now date" 
"2006-01-02" ${0}
endsnippet

snippet lo ""
lo.${1:Map}(${2:slice}, ${3:func})
endsnippet

snippet funi ""
func(${1:item} ${2:model}, _ int) ${3:return} {
	return $1$4
}
endsnippet

snippet fun ""
func(${1:item} ${2:model}) ${3:return} {
	return $1$4
}
endsnippet

snippet lofilter ""
lo.Filter(${1:slice}, func($2 ${3:model}) ${4:return} {
	return $2.${5:result}
})
endsnippet

snippet lomap ""
lo.Map(${1:slice}, func(${2:item} ${3:model}, _ int) ${4:return} {
	return $2.${5:result}
})
endsnippet

snippet lofind ""
lo.Find(${1:slice}, func(${2:item} ${3:model}) ${4:return} {
	return $2.${5:result}
})
endsnippet

snippet del ""
"deleted":    true,
"deleted_by": c.DashboardUserEmail(),
"deleted_at": time.Now().Unix(),
endsnippet

snippet upd ""
"updated_by": c.DashboardUserEmail(),
"updated_at": time.Now().Unix(),
endsnippet

snippet kv "key value" i
"$1": $1$0
endsnippet
