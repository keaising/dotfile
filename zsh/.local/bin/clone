#!/usr/bin/env python3

import sys
import re
import os


def main():
    if len(sys.argv) == 1:
        sys.exit(0)
    elif len(sys.argv) == 2:
        clone(sys.argv[1])


def clone(url: str):
    (host, org, repo) = split_url(url)
    dir = get_dir()
    target = os.path.join(dir, host, org, repo)

    git_url = f"git@{host}:{org}/{repo}.git"
    cmd = f"git clone {git_url} {target}"
    print(cmd)
    if os.path.exists(target):
        return
    run(cmd)


def get_dir() -> str:
    directory = fetch('git config clone.directory')
    if directory == "":
        print(
            "Please set clone directory by 'git config --global clone.directory YOUR.PATH'"
        )
        return

    if directory.startswith("$HOME"):
        directory = "~" + directory.removeprefix("$HOME")
    return os.path.expanduser(directory)


def split_url(url: str) -> tuple[str, str, str]:
    reg_ex = '[a-zA-Z]+(@|://)(?P<host_name>\w[\w.-]+)(:|/)(?P<org>\w[\w.-\/]+)/(?P<repo>\w[\w.-]+)'
    if url.startswith("git"):
        reg_ex = '[a-zA-Z]+(@|://)(?P<host_name>\w[\w.-]+)(:|/)(?P<org>\w[\w.-\/]+)/(?P<repo>\w[\w.-]+).git'
    result = re.match(reg_ex, url)
    return (result.group('host_name'), result.group('org'),
            result.group('repo'))


def fetch(command: str) -> str:
    return os.popen(command).read().strip()


def run(command: str) -> None:
    return os.system(command)


main()
