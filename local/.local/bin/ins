#!/usr/bin/env fish

function ins_nvim
    rm -rf ~/.local/bin/nvim
    sudo rm -f /usr/local/bin/nvim
    mkdir -p ~/.local/bin

    set -l WORKDIR "$(mktemp -d)"
    cd $WORKDIR

    set -l VERSION nightly
    [ $argv[1] ] && set -l VERSION $argv[1]

    if [ (uname) = Linux ]
        wget https://github.com/neovim/neovim/releases/download/$VERSION/nvim-linux64.tar.gz
        tar -zxf nvim-linux64.tar.gz
        rm nvim-linux64.tar.gz
        mv nvim-linux64 ~/.local/bin/nvim
    else
        wget https://github.com/neovim/neovim/releases/download/$VERSION/nvim-macos.tar.gz
        tar -zxf nvim-macos.tar.gz
        rm nvim-macos.tar.gz
        mv nvim-macos ~/.local/bin/nvim
    end

    rm -r $WORKDIR

    sudo ln -s ~/.local/bin/nvim/bin/nvim /usr/local/bin/nvim
    nvim --version
end

function ins_gotools
    set -l GOPROXY https://goproxy.cn
    set -l GO111MODULE on

    go version

    set -l REPOS \
        golang.org/x/tools/gopls \
        golang.org/x/tools/cmd/gorename \
        golang.org/x/tools/cmd/goimports \
        github.com/uudashr/gopkgs/cmd/gopkgs \
        mvdan.cc/gofumpt \
        github.com/segmentio/golines \
        github.com/ramya-rao-a/go-outline \
        github.com/haya14busa/goplay/cmd/goplay \
        github.com/fatih/gomodifytags \
        github.com/mgechev/revive \
        golang.org/x/tools/cmd/guru \
        github.com/davidrjenni/reftools/cmd/fillstruct \
        github.com/rogpeppe/godef \
        github.com/fatih/motion \
        github.com/kisielk/errcheck \
        github.com/klauspost/asmfmt/cmd/asmfmt \
        honnef.co/go/tools/cmd/staticcheck \
        honnef.co/go/tools/cmd/keyify \
        github.com/jstemmer/gotags \
        github.com/koron/iferr \
        github.com/josharian/impl \
        github.com/cweill/gotests/... \
        github.com/golangci/golangci-lint/cmd/golangci-lint \
        github.com/rinchsan/gosimports/cmd/gosimports \
        golang.org/x/vuln/cmd/govulncheck \
        github.com/segmentio/golines \
        github.com/ryancurrah/gomodguard/cmd/gomodguard

    echo $PWD
    for repo in $REPOS
        set -l run "go install $repo@latest"
        echo $run
        eval $run
    end

end

function main
    switch $argv[1]
        case nvim
            ins_nvim $argv[2..-1]
        case go gotools
            ins_gotools
    end
end

main $argv
